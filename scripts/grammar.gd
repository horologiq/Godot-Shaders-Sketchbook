class_name Grammar
extends CodeEdit

#######

const TT_DATATYPES = [
	"bool",
	"bvec2",
	"bvec3",
	"bvec4",
	"int",
	"ivec2",
	"ivec3",
	"ivec4",
	"uint",
	"uvec2",
	"uvec3",
	"uvec4",
	"float",
	"vec2",
	"vec3",
	"vec4",
	"mat2",
	"mat3",
	"mat4",
	"sampler2D",
	"isampler2D",
	"usampler2D",
	"sampler2DArray",
	"isampler2DArray",
	"usampler2DArray",
	"sampler3D",
	"isampler3D",
	"usampler3D",
	"samplerCube",
	"samplerCubeArray"
]
const TT_HINTS = [
	"source_color",
	"hint_range",
	"source_color",
	"hint_normal",
	"hint_default_white",
	"hint_default_black",
	"hint_default_transparent",
	"hint_anisotropy",
	"hint_roughness",
	"filter",
	"repeat",
	"hint_screen_texture",
	"hint_depth_texture",
	"hint_normal_roughness_texture"
]

var keywords = [
	"void",
	"bool",
	"bvec2",
	"bvec3",
	"bvec4",
	"int",
	"ivec2",
	"ivec3",
	"ivec4",
	"uint",
	"uvec2",
	"uvec3",
	"uvec4",
	"float",
	"vec2",
	"vec3",
	"vec4",
	"mat2",
	"mat3",
	"mat4",
	"sampler2D",
	"isampler2D",
	"usampler2D",
	"sampler2DArray",
	"isampler2DArray",
	"usampler2DArray",
	"sampler3D",
	"isampler3D",
	"usampler3D",
	"samplerCube",
	"samplerCubeArray",
	"lowp",
	"mediump",
	"highp",
	"const",
	"struct",
	"discard",
	"in",
	"out",
	"inout",
	"const",
	"varying",
	"flat",
	"smooth",
	"uniform",
	"group_uniforms",
	"source_color",
	"hint_range",
	"source_color",
	"hint_normal",
	"hint_default_white",
	"hint_default_black",
	"hint_default_transparent",
	"hint_anisotropy",
	"hint_roughness",
	"filter",
	"repeat",
	"hint_screen_texture",
	"hint_depth_texture",
	"hint_normal_roughness_texture",
	"shader_type",
	"global",
	"instance",
	"render_mode"
]
var flow_controls = [
	"if", "else", "switch", "case", "break", "default", "for", "while", "do", "return"
]
var builtin_functions = [
	"radians",
	"degrees",
	"sin",
	"cos",
	"tan",
	"asin",
	"acos",
	"atan",
	"sinh",
	"cosh",
	"tanh",
	"asinh",
	"acosh",
	"atanh",
	"pow",
	"exp",
	"exp2",
	"log",
	"log2",
	"sqrt",
	"inversesqrt",
	"abs",
	"sign",
	"floor",
	"round",
	"roundEven",
	"trunc",
	"ceil",
	"fract",
	"mod",
	"modf",
	"min",
	"max",
	"clamp",
	"mix",
	"fma",
	"step",
	"smoothstep",
	"isnan",
	"isinf",
	"floatBitsToInt",
	"floatBitsToUint",
	"intBitsToFloat",
	"uintBitsToFloat",
	"length",
	"distance",
	"dot",
	"cross",
	"normalize",
	"reflect",
	"refract",
	"faceforward",
	"matrixCompMult",
	"outerProduct",
	"transpose",
	"determinant",
	"inverse",
	"lessThan",
	"greaterThan",
	"lessThanEqual",
	"greaterThanEqual",
	"equal",
	"notEqual",
	"any",
	"all",
	"not",
	"textureSize",
	"textureQueryLod",
	"textureQueryLevels",
	"texture",
	"textureProj",
	"textureLod",
	"textureProjLod",
	"textureGrad",
	"textureProjGrad",
	"texelFetch",
	"textureGather",
	"dFdx",
	"dFdxCoarse",
	"dFdxFine",
	"dFdy",
	"dFdyCoarse",
	"dFdyFine",
	"fwidth",
	"fwidthCoarse",
	"fwidthFine",
	"packHalf2x16",
	"unpackHalf2x16",
	"packUnorm2x16",
	"unpackUnorm2x16",
	"packSnorm2x16",
	"unpackSnorm2x16",
	"packUnorm4x8",
	"unpackUnorm4x8",
	"packSnorm4x8",
	"unpackSnorm4x8",
	"bitfieldExtract",
	"bitfieldExtract",
	"bitfieldInsert",
	"bitfieldInsert",
	"bitfieldReverse",
	"bitfieldReverse",
	"bitCount",
	"bitCount",
	"findLSB",
	"findLSB",
	"findMSB",
	"findMSB",
	"imulExtended",
	"umulExtended",
	"uaddCarry",
	"usubBorrow",
	"ldexp",
	"frexp"
]

var canvas_item_render_modes = [
	"blend_mix",
	"blend_add",
	"blend_sub",
	"blend_mul",
	"blend_premul_alpha",
	"blend_disabled",
	"unshaded",
	"light_only",
	"skip_vertex_transform",
	"world_vertex_coords"
]
var canvas_item_var_builtins = [
	"TIME",
	"PI",
	"TAU",
	"E",
	"MODEL_MATRIX",
	"CANVAS_MATRIX",
	"SCREEN_MATRIX",
	"INSTANCE_ID",
	"INSTANCE_CUSTOM",
	"AT_LIGHT_PASS",
	"TEXTURE_PIXEL_SIZE",
	"VERTEX",
	"VERTEX_ID",
	"UV",
	"COLOR",
	"POINT_SIZE",
	"FRAGCOORD",
	"SCREEN_PIXEL_SIZE",
	"POINT_COORD",
	"TEXTURE",
	"SPECULAR_SHININESS_TEXTURE",
	"SPECULAR_SHININESS",
	"SCREEN_UV",
	"SCREEN_TEXTURE",
	"NORMAL",
	"NORMAL_TEXTURE",
	"NORMAL_MAP",
	"NORMAL_MAP_DEPTH",
	"SHADOW_VERTEX",
	"LIGHT_VERTEX",
	"LIGHT_COLOR",
	"LIGHT_ENERGY",
	"LIGHT_POSITION",
	"LIGHT_DIRECTION",
	"LIGHT_IS_DIRECTIONAL",
	"LIGHT_VERTEX",
	"LIGHT",
	"SPECULAR_SHININESS",
	"SHADOW_MODULATE"
]
var canvas_item_functions = [
	"texture_sdf", "texture_sdf_normal", "sdf_to_screen_uv", "screen_uv_to_sdf"
]

var spatial_render_modes = [
	"blend_mix",
	"blend_add",
	"blend_sub",
	"blend_mul",
	"depth_draw_opaque",
	"depth_draw_always",
	"depth_draw_never",
	"depth_prepass_alpha",
	"depth_test_disabled",
	"sss_mode_skin",
	"cull_back",
	"cull_front",
	"cull_disabled",
	"unshaded",
	"wireframe",
	"diffuse_burley",
	"diffuse_lambert",
	"diffuse_lambert_wrap",
	"diffuse_toon",
	"specular_schlick_ggx",
	"specular_toon",
	"specular_disabled",
	"skip_vertex_transform",
	"world_vertex_coords",
	"ensure_correct_normals",
	"shadows_disabled",
	"ambient_light_disabled",
	"shadow_to_opacity",
	"vertex_lighting",
	"particle_trails",
	"alpha_to_coverage",
	"alpha_to_coverage_and_one",
	"fog_disabled"
]
var spatial_var_builtins = [
	"TIME",
	"PI",
	"TAU",
	"E",
	"VIEWPORT_SIZE",
	"VIEW_MATRIX",
	"INV_VIEW_MATRIX",
	"INV_PROJECTION_MATRIX",
	"NODE_POSITION_WORLD",
	"NODE_POSITION_VIEW",
	"CAMERA_POSITION_WORLD",
	"CAMERA_DIRECTION_WORLD",
	"OUTPUT_IS_SRGB",
	"INSTANCE_ID",
	"INSTANCE_CUSTOM",
	"VIEW_INDEX",
	"VIEW_MONO_LEFT",
	"VIEW_RIGHT",
	"EYE_OFFSET",
	"VERTEX",
	"VERTEX_ID",
	"NORMAL",
	"TANGENT",
	"BINORMAL",
	"POSITION",
	"UV",
	"UV2",
	"COLOR",
	"ROUGHNESS",
	"POINT_SIZE",
	"MODELVIEW_MATRIX",
	"MODELVIEW_NORMAL_MATRIX",
	"MODEL_MATRIX",
	"MODEL_NORMAL_MATRIX",
	"PROJECTION_MATRIX",
	"BONE_INDICES",
	"BONE_WEIGHTS",
	"CUSTOM0",
	"CUSTOM1",
	"CUSTOM2",
	"CUSTOM3",
	"FRAGCOORD",
	"FRONT_FACING",
	"VIEW",
	"POINT_COORD",
	"OUTPUT_IS_SRGB",
	"SCREEN_TEXTURE",
	"SCREEN_UV",
	"DEPTH_TEXTURE",
	"DEPTH",
	"NORMAL_MAP",
	"NORMAL_MAP_DEPTH",
	"ALBEDO",
	"ALPHA",
	"ALPHA_SCISSOR_THRESHOLD",
	"ALPHA_HASH_SCALE",
	"ALPHA_ANTIALIASING_EDGE",
	"ALPHA_TEXTURE_COORDINATE",
	"METALLIC",
	"SPECULAR",
	"ROUGHNESS",
	"RIM",
	"RIM_TINT",
	"CLEARCOAT",
	"CLEARCOAT_GLOSS",
	"ANISOTROPY",
	"ANISOTROPY_FLOW",
	"SSS_STRENGTH",
	"SSS_TRANSMITTANCE_COLOR",
	"SSS_TRANSMITTANCE_DEPTH",
	"SSS_TRANSMITTANCE_BOOST",
	"BACKLIGHT",
	"AO",
	"AO_LIGHT_AFFECT",
	"EMISSION",
	"FOG",
	"RADIANCE",
	"IRRADIANCE",
	"LIGHT",
	"LIGHT_COLOR",
	"SPECULAR_AMOUNT",
	"LIGHT_IS_DIRECTIONAL",
	"ATTENUATION",
	"OUTPUT_IS_SRGB",
	"DIFFUSE_LIGHT",
	"SPECULAR_LIGHT"
]


func get_hl(n):
	var hl = CodeHighlighter.new()

	for keyword in keywords:
		hl.add_keyword_color(keyword, Color(1.0, 0.439, 0.522))
	for flow_control in flow_controls:
		hl.add_keyword_color(flow_control, Color(1.0, 0.549, 0.8))
	for builtin_function in builtin_functions:
		hl.add_keyword_color(builtin_function, Color(1.0, 0.439, 0.522))

	if n == "canvas_item":
		for canvas_item_render_mode in canvas_item_render_modes:
			hl.add_keyword_color(canvas_item_render_mode, Color(0.78, 1.0, 0.929))
		for canvas_item_var_builtin in canvas_item_var_builtins:
			hl.add_keyword_color(canvas_item_var_builtin, Color(0.78, 1.0, 0.929))
		for canvas_item_function in canvas_item_functions:
			hl.add_keyword_color(canvas_item_function, Color(1.0, 0.439, 0.522))

	elif n == "spatial":
		for spatial_render_mode in spatial_render_modes:
			hl.add_keyword_color(spatial_render_mode, Color(0.78, 1.0, 0.929))
		for spatial_var_builtin in spatial_var_builtins:
			hl.add_keyword_color(spatial_var_builtin, Color(0.78, 1.0, 0.929))

	hl.add_color_region("//", "", Color(0.5, 0.5, 0.5), true)
	hl.set_function_color(Color(0.341, 0.702, 1.00))
	hl.set_member_variable_color(Color(0.737, 0.878, 1.00))
	hl.set_number_color(Color(0.631, 1.0, 0.878))
	hl.set_symbol_color(Color(0.67, 0.79, 1.0))

	return hl
